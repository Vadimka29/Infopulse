import tree.*;
import list.*;
import geom.*;
import geomtest.Point3D;

public class Lection11 {
	public static void main(String[] args){
		CompleteBinTree<String> cbt = new CompleteBinTree<>(); 
		
		/*LinkedBinTree<Integer> lb = new LinkedBinTree<>
			(LinkedBinTree.Traversal.INORDER);
		System.out.println(lb);
		IContainer<Integer> r = lb.addRoot(10);
		IContainer<Integer> i5 =  lb.insertLeft(r, 5);
		IContainer<Integer> i6 = lb.insertRight(r, 15);
		lb.insertLeft(i5, 2);
		lb.insertRight(i5, 7);
		lb.insertLeft(i6, 12);
		//lb.insertRight(i6, 30);
		System.out.println(lb);
		System.out.println("Proper ?:  " + lb.isProper(lb.root()));
		lb.print();
		Point3D p3 = new Point3D(3, 4, 5);
		System.out.println(p3);
		p3.print();
		Point[] array = {new Point(1,2), new Point3D(1,2,3),
				new Point(3,4)};
		for(Point p: array){
			System.out.println(p);
		}*/
		
	}
	
}
